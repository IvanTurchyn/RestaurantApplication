{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    const storedUser = localStorage.getItem('currentUser');\n    this.currentUserSubject = new BehaviorSubject(storedUser ? JSON.parse(storedUser) : null);\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  getUserRole() {\n    const currentUser = this.currentUserValue;\n    return currentUser ? currentUser.role : '';\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  getToken() {\n    const currentUser = this.currentUserValue;\n    return currentUser && currentUser.token ? currentUser.token.toString() : null;\n  }\n  refreshToken() {\n    return this.http.post(`http://localhost:8080/api/refresh`, {\n      token: this.getToken()\n    }).pipe(map(user => {\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      this.currentUserSubject.next(user);\n      return user;\n    }));\n  }\n  login(username, password) {\n    console.log('Login data:', username, password);\n    return this.http.post(`http://localhost:8080/api/login`, {\n      username,\n      password\n    }).pipe(map(response => {\n      console.log('Login response:', response);\n      const user = {\n        id: '',\n        username,\n        password: '',\n        role: response.role,\n        token: response.token\n      };\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      this.currentUserSubject.next(user);\n      this.router.navigate(['/profile']);\n      return user;\n    }));\n  }\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","map","AuthService","constructor","http","router","storedUser","localStorage","getItem","currentUserSubject","JSON","parse","currentUser","asObservable","getUserRole","currentUserValue","role","value","getToken","token","toString","refreshToken","post","pipe","user","setItem","stringify","next","login","username","password","console","log","response","id","navigate","logout","removeItem","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {User} from \"../models/user\";\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<User | null>;\n  public currentUser: Observable<User | null>;\n\n  constructor(private http: HttpClient, private  router: Router) {\n    const storedUser = localStorage.getItem('currentUser');\n    this.currentUserSubject = new BehaviorSubject<User | null>(storedUser ? JSON.parse(storedUser) : null);\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public getUserRole(): string {\n    const currentUser = this.currentUserValue;\n    return currentUser ? currentUser.role : '';\n  }\n\n  public get currentUserValue(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  getToken(): string | null {\n    const currentUser = this.currentUserValue;\n    return currentUser && currentUser.token ? currentUser.token.toString() : null;\n  }\n\n  refreshToken(): Observable<User | null> {\n    return this.http.post<any>(`http://localhost:8080/api/refresh`, { token: this.getToken() })\n      .pipe(map(user => {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  login(username: string, password: string) {\n    console.log('Login data:', username, password);\n    return this.http.post<any>(`http://localhost:8080/api/login`, { username, password })\n      .pipe(map(response => {\n        console.log('Login response:', response);\n        const user: User = {\n          id: '',\n          username,\n          password: '',\n          role: response.role,\n          token: response.token\n        };\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        this.router.navigate(['/profile']);\n        return user;\n      }));\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}