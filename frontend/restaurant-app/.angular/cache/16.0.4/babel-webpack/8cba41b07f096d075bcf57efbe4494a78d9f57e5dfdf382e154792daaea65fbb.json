{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MenuService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/menu-positions'; // Replace with your actual API endpoint\n  }\n\n  getAllMenuPositions() {\n    return this.http.get(this.apiUrl);\n  }\n  getMenuPositionById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createMenuPosition(menuPosition) {\n    return this.http.post(this.apiUrl, menuPosition);\n  }\n  updateMenuPosition(id, updatedMenuPosition) {\n    return this.http.put(`${this.apiUrl}/${id}`, updatedMenuPosition);\n  }\n  deleteMenuPosition(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)(i0.ɵɵinject(i1.HttpClient));\n};\nMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});\nexport { MenuService };","map":{"version":3,"names":["MenuService","constructor","http","apiUrl","getAllMenuPositions","get","getMenuPositionById","id","createMenuPosition","menuPosition","post","updateMenuPosition","updatedMenuPosition","put","deleteMenuPosition","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {MenuPosition} from \"./models/menu-positions\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  private apiUrl = 'http://localhost:8080/api/menu-positions'; // Replace with your actual API endpoint\n\n  constructor(private http: HttpClient) { }\n\n  getAllMenuPositions(): Observable<MenuPosition[]> {\n    return this.http.get<MenuPosition[]>(this.apiUrl);\n  }\n\n  getMenuPositionById(id: string): Observable<MenuPosition> {\n    return this.http.get<MenuPosition>(`${this.apiUrl}/${id}`);\n  }\n\n  createMenuPosition(menuPosition: MenuPosition): Observable<MenuPosition> {\n    return this.http.post<MenuPosition>(this.apiUrl, menuPosition);\n  }\n\n  updateMenuPosition(id: string, updatedMenuPosition: MenuPosition): Observable<MenuPosition> {\n    return this.http.put<MenuPosition>(`${this.apiUrl}/${id}`, updatedMenuPosition);\n  }\n\n  deleteMenuPosition(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAMA,MAGaA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,0CAA0C,CAAC,CAAC;EAErB;;EAExCC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACF,MAAM,CAAC;EACnD;EAEAG,mBAAmBA,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EAC5D;EAEAC,kBAAkBA,CAACC,YAA0B;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAe,IAAI,CAACP,MAAM,EAAEM,YAAY,CAAC;EAChE;EAEAE,kBAAkBA,CAACJ,EAAU,EAAEK,mBAAiC;IAC9D,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAe,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,EAAEK,mBAAmB,CAAC;EACjF;EAEAE,kBAAkBA,CAACP,EAAU;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;AAvBWP,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}