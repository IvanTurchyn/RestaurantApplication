{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/common\";\nfunction RegisterComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r1);\n  }\n}\nclass RegisterComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.roles = ['Client', 'Waiter', 'Chef'];\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      role: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.userService.registerUser(this.registerForm.value).subscribe(data => {\n        console.log('User registered successfully.');\n      }, error => {\n        console.error('Error during registration:', error);\n      });\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"role\"], [\"formControlName\", \"role\", \"id\", \"role\", \"required\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 7);\n      i0.ɵɵtemplate(13, RegisterComponent_option_13_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r1","ɵɵadvance","ɵɵtextInterpolate","RegisterComponent","constructor","formBuilder","userService","roles","ngOnInit","registerForm","group","username","required","password","role","onSubmit","valid","registerUser","value","subscribe","data","console","log","error","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","RegisterComponent_option_13_Template"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\register\\register.component.ts","D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {UserService} from \"../user.service\";\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  roles = ['Client', 'Waiter', 'Chef'];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      role: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.userService.registerUser(this.registerForm.value).subscribe(\n        data => {\n          console.log('User registered successfully.');\n\n        },\n        error => {\n          console.error('Error during registration:', error);\n        }\n      );\n    }\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\" required>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\" required>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"role\">Role</label>\n    <select formControlName=\"role\" class=\"form-control\" id=\"role\" required>\n      <option *ngFor=\"let role of roles\" [value]=\"role\">{{role}}</option>\n    </select>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}