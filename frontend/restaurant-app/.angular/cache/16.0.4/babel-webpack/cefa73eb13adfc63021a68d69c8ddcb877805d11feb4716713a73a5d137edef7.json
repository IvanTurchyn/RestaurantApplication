{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass OrderService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/orders';\n  }\n  getOrders() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Wystąpił błąd!', error);\n      return throwError(error);\n    }));\n  }\n  getOrderById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.error('Wystąpił błąd!', error);\n      return throwError(error);\n    }));\n  }\n  getOrdersByStatus(status) {\n    return this.http.get(`${this.apiUrl}/status/${status}`);\n  }\n  createOrder(order) {\n    return this.http.post(this.apiUrl, order);\n  }\n  updateOrder(id, updatedOrder) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, updatedOrder);\n  }\n  deleteOrder(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});\nexport { OrderService };","map":{"version":3,"names":["throwError","catchError","OrderService","constructor","http","apiUrl","getOrders","get","pipe","error","console","getOrderById","id","url","getOrdersByStatus","status","createOrder","order","post","updateOrder","updatedOrder","put","deleteOrder","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Order, OrderStatus} from './models/order';\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private apiUrl = 'http://localhost:8080/api/orders';\n\n  constructor(private http: HttpClient) { }\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.apiUrl)\n      .pipe(\n        catchError(error => {\n          console.error('Wystąpił błąd!', error);\n          return throwError(error);\n        })\n      );\n  }\n\n  getOrderById(id: string): Observable<Order> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get<Order>(url)\n      .pipe(\n        catchError(error => {\n          console.error('Wystąpił błąd!', error);\n          return throwError(error);\n        })\n      );\n  }\n\n  getOrdersByStatus(status: OrderStatus): Observable<Order[]> {\n    return this.http.get<Order[]>(`${this.apiUrl}/status/${status}`);\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(this.apiUrl, order);\n  }\n\n  updateOrder(id: string, updatedOrder: Order): Observable<void> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put<void>(url, updatedOrder);\n  }\n\n  deleteOrder(id: string): Observable<void> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete<void>(url);\n  }\n}\n"],"mappings":"AAEA,SAAoBA,UAAU,QAAO,MAAM;AAE3C,SAAQC,UAAU,QAAO,gBAAgB;;;AAEzC,MAGaC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEX;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC,CACvCG,IAAI,CACHP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACL;EAEAE,YAAYA,CAACC,EAAU;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAQM,GAAG,CAAC,CAC7BL,IAAI,CACHP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACL;EAEAK,iBAAiBA,CAACC,MAAmB;IACnC,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,WAAWU,MAAM,EAAE,CAAC;EAClE;EAEAC,WAAWA,CAACC,KAAY;IACtB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAQ,IAAI,CAACb,MAAM,EAAEY,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACP,EAAU,EAAEQ,YAAmB;IACzC,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACiB,GAAG,CAAOR,GAAG,EAAEO,YAAY,CAAC;EAC/C;EAEAE,WAAWA,CAACV,EAAU;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACmB,MAAM,CAAOV,GAAG,CAAC;EACpC;;AA1CWX,YAAY,C;mBAAZA,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZzB,YAAY,C;SAAZA,YAAY;EAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEP5B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}