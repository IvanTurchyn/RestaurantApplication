{"ast":null,"code":"import { OrderStatus } from \"../models/order\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../order.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction OrderComponent_li_10_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r4.name, \": \", item_r4.price, \" \");\n  }\n}\nfunction OrderComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 13)(1, \"div\", 14)(2, \"div\")(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ul\");\n    i0.ɵɵtemplate(10, OrderComponent_li_10_li_10_Template, 2, 2, \"li\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function OrderComponent_li_10_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const order_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateOrder(order_r2.id, order_r2));\n    });\n    i0.ɵɵtext(13, \"Aktualizuj\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function OrderComponent_li_10_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const order_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteOrder(order_r2.id));\n    });\n    i0.ɵɵtext(15, \"Usu\\u0144\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const order_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(order_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", order_r2.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Client: \", order_r2.client.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", order_r2.items);\n  }\n}\nclass OrderComponent {\n  constructor(orderService) {\n    this.orderService = orderService;\n    this.orders = [];\n    this.newOrder = {\n      id: '',\n      client: {},\n      items: [],\n      status: OrderStatus.IN_PROGRESS\n    };\n  }\n  ngOnInit() {\n    this.getOrders();\n  }\n  getOrders() {\n    this.orderService.getOrders().subscribe(orders => this.orders = orders);\n  }\n  createOrder(order) {\n    this.orderService.createOrder(order).subscribe(newOrder => this.orders.push(newOrder));\n  }\n  updateOrder(id, updatedOrder) {\n    this.orderService.updateOrder(id, updatedOrder).subscribe(() => this.getOrders());\n  }\n  deleteOrder(id) {\n    this.orderService.deleteOrder(id).subscribe(() => this.getOrders());\n  }\n}\nOrderComponent.ɵfac = function OrderComponent_Factory(t) {\n  return new (t || OrderComponent)(i0.ɵɵdirectiveInject(i1.OrderService));\n};\nOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderComponent,\n  selectors: [[\"app-order\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [1, \"container\"], [1, \"row\"], [1, \"col-12\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"orderForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"client\"], [\"type\", \"text\", \"id\", \"client\", \"required\", \"\", \"name\", \"client\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"list-group-item\"], [1, \"d-flex\", \"justify-content-between\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function OrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"body\")(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"h2\");\n      i0.ɵɵtext(8, \"Zam\\u00F3wienia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"ul\", 5);\n      i0.ɵɵtemplate(10, OrderComponent_li_10_Template, 16, 4, \"li\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 4)(13, \"h2\");\n      i0.ɵɵtext(14, \"Stw\\u00F3rz nowe zam\\u00F3wienie\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"form\", 7, 8);\n      i0.ɵɵlistener(\"ngSubmit\", function OrderComponent_Template_form_ngSubmit_15_listener() {\n        return ctx.createOrder(ctx.newOrder);\n      });\n      i0.ɵɵelementStart(17, \"div\", 9)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Klient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function OrderComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.newOrder.client.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Stw\\u00F3rz zam\\u00F3wienie\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.newOrder.client.username);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { OrderComponent };","map":{"version":3,"names":["OrderStatus","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","item_r4","name","price","ɵɵtemplate","OrderComponent_li_10_li_10_Template","ɵɵlistener","OrderComponent_li_10_Template_button_click_12_listener","restoredCtx","ɵɵrestoreView","_r6","order_r2","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","updateOrder","id","OrderComponent_li_10_Template_button_click_14_listener","ctx_r7","deleteOrder","ɵɵtextInterpolate","ɵɵtextInterpolate1","status","client","username","ɵɵproperty","items","OrderComponent","constructor","orderService","orders","newOrder","IN_PROGRESS","ngOnInit","getOrders","subscribe","createOrder","order","push","updatedOrder","ɵɵdirectiveInject","i1","OrderService","selectors","decls","vars","consts","template","OrderComponent_Template","rf","ctx","ɵɵelement","OrderComponent_li_10_Template","OrderComponent_Template_form_ngSubmit_15_listener","OrderComponent_Template_input_ngModelChange_20_listener","$event"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\order\\order.component.ts","D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\order\\order.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {OrderService} from \"../order.service\";\nimport {Order, OrderStatus} from \"../models/order\";\nimport {User} from \"../models/user\";\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n  orders: Order[] = [];\n  newOrder: Order = {\n    id: '',\n    client: {} as User,\n    items: [],\n    status: OrderStatus.IN_PROGRESS\n  };\n\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders(): void {\n    this.orderService.getOrders().subscribe(orders => this.orders = orders);\n  }\n\n  createOrder(order: Order): void {\n    this.orderService.createOrder(order).subscribe(newOrder => this.orders.push(newOrder));\n  }\n\n  updateOrder(id: string, updatedOrder: Order): void {\n    this.orderService.updateOrder(id, updatedOrder).subscribe(() => this.getOrders());\n  }\n\n  deleteOrder(id: string): void {\n    this.orderService.deleteOrder(id).subscribe(() => this.getOrders());\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n</head>\n<body>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2>Zamówienia</h2>\n      <!-- Lista zamówień -->\n      <ul class=\"list-group\">\n        <li *ngFor=\"let order of orders\" class=\"list-group-item\">\n          <div class=\"d-flex justify-content-between\">\n            <div>\n              <h5>{{ order.id }}</h5>\n              <p>Status: {{ order.status }}</p>\n              <p>Client: {{ order.client.username }}</p>\n              <!-- List items -->\n              <ul>\n                <li *ngFor=\"let item of order.items\">\n                  {{ item.name }}: {{ item.price }}\n                </li>\n              </ul>\n            </div>\n            <div>\n              <button class=\"btn btn-primary\" (click)=\"updateOrder(order.id, order)\">Aktualizuj</button>\n              <button class=\"btn btn-danger\" (click)=\"deleteOrder(order.id)\">Usuń</button>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2>Stwórz nowe zamówienie</h2>\n      <!-- Formularz tworzenia nowego zamówienia -->\n      <form (ngSubmit)=\"createOrder(newOrder)\" #orderForm=\"ngForm\">\n        <!-- Formularz tutaj -->\n        <!-- Przykładowy input, powtórz dla wszystkich pól -->\n        <div class=\"form-group\">\n          <label for=\"client\">Klient</label>\n          <input type=\"text\" class=\"form-control\" id=\"client\" required [(ngModel)]=\"newOrder.client.username\" name=\"client\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">Stwórz zamówienie</button>\n      </form>\n    </div>\n  </div>\n</div>\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}