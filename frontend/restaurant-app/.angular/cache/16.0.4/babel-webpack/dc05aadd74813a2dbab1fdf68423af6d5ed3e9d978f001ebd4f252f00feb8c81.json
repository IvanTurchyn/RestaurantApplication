{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  getAllUsers() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/users/${id}`);\n  }\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}/users`, user);\n  }\n  updateUser(id, user) {\n    return this.http.put(`${this.apiUrl}/users/${id}`, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n  loginUser(user) {\n    return this.http.post(`${this.apiUrl}/login`, user);\n  }\n  registerUser(user) {\n    return this.http.post(`${this.apiUrl}/register`, user);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["UserService","constructor","http","apiUrl","getAllUsers","get","getUserById","id","createUser","user","post","updateUser","put","deleteUser","delete","loginUser","registerUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Записи занятий ClickMeeteeng\\Desktop\\Inzeneria oprogramowania\\Cwiczenia\\RestaurantApplication\\frontend\\restaurant-app\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {User} from \"./models/user\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) { }\n\n  getAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.apiUrl}/users`);\n  }\n\n  getUserById(id: string): Observable<User> {\n    return this.http.get<User>(`${this.apiUrl}/users/${id}`);\n  }\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(`${this.apiUrl}/users`, user);\n  }\n\n  updateUser(id: string, user: User): Observable<User> {\n    return this.http.put<User>(`${this.apiUrl}/users/${id}`, user);\n  }\n\n  deleteUser(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/users/${id}`);\n  }\n\n  loginUser(user: User): Observable<string> {\n    return this.http.post<string>(`${this.apiUrl}/login`, user);\n  }\n\n  registerUser(user: User): Observable<string> {\n    return this.http.post<string>(`${this.apiUrl}/register`, user);\n  }\n}\n"],"mappings":";;AAMA,MAGaA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EACtD;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC1D;EAEAC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,MAAM,QAAQ,EAAEM,IAAI,CAAC;EAC3D;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAU;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,UAAUI,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChE;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC7D;EAEAQ,SAASA,CAACN,IAAU;IAClB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,QAAQ,EAAEM,IAAI,CAAC;EAC7D;EAEAO,YAAYA,CAACP,IAAU;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,WAAW,EAAEM,IAAI,CAAC;EAChE;;AA/BWT,WAAW,C;mBAAXA,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXpB,WAAW,C;SAAXA,WAAW;EAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPvB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}